# Test Azure Functions API Endpoints
# All responses follow the standard format:
# {
#   "success": boolean,
#   "message": string,
#   "data": any,
#   "errors": string[] (optional),
#   "timestamp": string,
#   "statusCode": number
# }

### Login with Admin User - Success Response
POST http://localhost:7071/api/funcLogin
Content-Type: application/json

{
  "email": "admin@example.com",
  "password": "admin123"
}

### Login with Regular User - Success Response
POST http://localhost:7071/api/funcLogin
Content-Type: application/json

{
  "email": "user@example.com",
  "password": "user123"
}

### Login with Manager User - Success Response
POST http://localhost:7071/api/funcLogin
Content-Type: application/json

{
  "email": "manager@example.com",
  "password": "manager123"
}

### Login with Invalid Credentials - Error Response
POST http://localhost:7071/api/funcLogin
Content-Type: application/json

{
  "email": "invalid@example.com",
  "password": "invalid"
}

### Login with Missing Password - Validation Error Response
POST http://localhost:7071/api/funcLogin
Content-Type: application/json

{
  "email": "admin@example.com"
}

### Login with Empty Body - Validation Error Response
POST http://localhost:7071/api/funcLogin
Content-Type: application/json

{}

###
# USER CREATION ENDPOINTS
###

### Create Admin User - Success Response
POST http://localhost:7071/api/funcCreateUser
Content-Type: application/json

{
  "email": "admin@example.com",
  "password": "admin123",
  "name": "Administrator",
  "role": "admin",
  "membershipPaid": true
}

### Create Regular User - Success Response
POST http://localhost:7071/api/funcCreateUser
Content-Type: application/json

{
  "email": "user@example.com",
  "password": "user123",
  "name": "Regular User",
  "role": "user",
  "membershipPaid": false
}

### Create Manager User - Success Response
POST http://localhost:7071/api/funcCreateUser
Content-Type: application/json

{
  "email": "manager@example.com",
  "password": "manager123",
  "name": "Manager User",
  "role": "manager",
  "membershipPaid": true
}

### Create User with Duplicate Email - Error Response
POST http://localhost:7071/api/funcCreateUser
Content-Type: application/json

{
  "email": "admin@example.com",
  "password": "admin456",
  "name": "Another Admin",
  "role": "admin"
}

### Create User with Missing Fields - Validation Error Response
POST http://localhost:7071/api/funcCreateUser
Content-Type: application/json

{
  "email": "incomplete@example.com",
  "password": "test123"
}

### Create User with Empty Body - Validation Error Response
POST http://localhost:7071/api/funcCreateUser
Content-Type: application/json

{}
